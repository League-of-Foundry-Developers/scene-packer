{
  "SCENE-PACKER": {
    "ok": "Ok",
    "dontShow": "Don't show me again",
    "settings": {
      "context-menu": {
        "name": "Enable Scene Packer context menu",
        "hint": "Adds context menu items to assist with packing a Scene. You should only need to enable this while actively developing and packing a module with scenes."
      }
    },
    "welcome": {
      "title": "Quick Start",
      "intro": "<h2>Welcome to <strong>{adventure}</strong>.</h2>",
      "brand-new": "<p>Would you like to import and unpack the content from this module?</p>",
      "update-available": "<p>An update is available. You have <strong>{existing}</strong> installed, and <strong>{version}</strong> is available. Would you like to import the content from this module?</p>",
      "update-cancelled": "Update of {module} from {from} -> to {to} was cancelled.",
      "update-warning-title": "CAUTION! Destructive operation ahead!",
      "update-warning-content": "<h2><i class='fas fa-exclamation-triangle'></i> Warning</h2><p>There are existing entries in this world that belong to <strong>{module}</strong>. Depending on your choice, you will <em>delete</em> these existing entries and then import the new entries.</p><p>It is <strong>strongly</strong> recommended to backup your world before performing this operation. If you have not done so already, select \"Cancel\" and <em>make a backup now</em> by exiting your world and making a <a href='https://foundryvtt.com/article/configuration/#backup' target='_blank'>backup of the world folder</a> that corresponds to this world (worlds/{world}).</p><p><strong>If you have made any changes</strong> (such as editing a journal entry, or adding player character tokens to a scene) to an entry that came from <em>{module}</em> and you would like to keep those changes, then you should take a copy of what you changed somewhere outside of this world (such as with screenshots or right-clicking the entry and choosing \"Export Data\" from the context menu) before choosing <em>Replace</em>, as those entries and changes <em>will be deleted</em>.</p>{listToDelete}<p>How would you like to proceed?</p><ul><li><em>Replace</em> the existing entries.</li><li><em>Rename</em> the old entries but otherwise leave the existing ones alone.</li><li><em>Cancel</em> this process, for instance to <strong>make a backup</strong>.</li></ul>",
      "update-warning-list-to-delete": "Existing entries that will be deleted and replaced or renamed:",
      "yes-all": "Yes import <strong>all {count} entities</strong>",
      "yes-all-fallback": "Yes import <strong>all entities</strong>",
      "let-me-choose": "Let me choose individual <strong>Scenes</strong>",
      "close": "Close",
      "import-all": {
        "title": "Please wait...",
        "wait-title": "Please wait... importing all content from {name}.",
        "wait": "Please wait... loading {type}...",
        "creating-data": "Creating {count} {type} from {label}...",
        "complete": "Finished importing all content from {name}."
      }
    },
    "worth-packing": {
      "title": "Scenes worth packing",
      "intro": "The following {count} of {total} Scene/s are worth packing if you haven't already:",
      "verify": "Verify compendium packs",
      "verify-intro": "<p>Verify that the scenes present in your world are also present in your module compendiums and contain packed data.</p><p><strong>Please note:</strong> this process will not verify that the packed data is the same, it merely ensures that packed data is present in the compendiums.</p>",
      "verify-select": "Select the module containing the compendium packs you wish to verify:",
      "verify-slow": "<strong>Please note:</strong> This process may take a while depending on how many scenes you have.",
      "verify-wait": "Please wait...",
      "verify-missing": "The following {count} of {total} Scene/s in the compendiums belonging to \"{module}\" may have issues:",
      "verify-ok": "All scenes were found in the compendiums belonging to \"{module}\".",
      "verify-not-found": "missing",
      "verify-not-packed": "no packed data",
      "none": "There are no Scenes that contain data worth packing."
    },
    "asset-report": {
      "name": "Asset Report",
      "selector": "Select whether to run the Asset Report against the local World or against a Module's compendiums.",
      "notes": "Below is the Asset Report showing which entities in your world have assets that depend on external locations. It does not support wildcard tokens.",
      "copy": "Copy JSON to clipboard",
      "copied-to-clipboard": "Asset Report copied to clipboard!",
      "scenes": "Scenes",
      "actors": "Actors",
      "journals": "Journals",
      "items": "Items",
      "playlists": "Playlists",
      "macros": "Macros",
      "tables": "RollTables",
      "show": "Show dependencies",
      "hide": "Hide dependencies",
      "hide-ok": "Only show entries that have dependencies:",
      "wait": "Please wait... Loading {type}...",
      "module-select": {
        "title": "Module Selection",
        "instructions": "The asset report will list all of the assets in the {mode} which have dependencies outside of your module. Use this report to help determine what images will be broken when you distribute your module to others. Use this form to select which modules you want to treat as a data source. In most cases this should just be your module and any dependencies of your module.",
        "none": "No Modules are available within this World.",
        "search": "Filter Modules",
        "web-external": "Treat web URLs as \"external\" when calculating dependencies.",
        "mini": "Select which module you wish to run the Asset Report against. Only modules with Packs are available."
      },
      "no-assets": "No Assets",
      "no-assets-details": "There are no assets in this world.",
      "processing-assets": "Processing assets",
      "processing-assets-count": "Validating {count} of {total} assets...",
      "run": "Run Asset Report"
    },
    "notifications": {
      "first-launch": "First launch of this Scene! Unpacking scene...",
      "done": "All done!",
      "pack-scene": {
        "writing-journals": "Writing {number} journals to scene: {name}",
        "no-journal-pins": "No journal pins detected on the scene.",
        "writing-tokens": "Writing {number} tokens to scene: {name}",
        "no-tokens": "No tokens detected on the scene.",
        "writing-tile-actions": "Writing {countActions} actions to {countTiles} tiles on scene: {name}",
        "already-shown-welcome": "The welcome journal \"{journal}\" has already been shown for this version \"{version}\"."
      },
      "import-entities": {
        "creating-data": "Importing {count} new {type}.",
        "missing-name": "Tried to find an actor for a token with no name.",
        "could-not-import": "Error importing entity",
        "invalid-packs": {
          "error": "Invalid pack configuration. Cannot import {type}. Check console (F12) for more details.",
          "short": "ImportEntities was called with no searchPacks defined.",
          "details": "ImportEntities was called with no valid searchPacks defined. Double check for typos between your manifest.json and module initialisation files. Received the following call details:",
          "reference": "ImportEntities was called with a reference that is not registered with Foundry. Double check for typos between your manifest.json and module initialisation files. Received the following call details:",
          "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console (F12) for more details.",
          "missing-pack-details": "ImportEntities was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup."
        },
        "invalid-collection": "Could not find a game collection of type \"{type}\".",
        "active-tiles-macro-missing": "Tile \"{tile}\" | Monk's Active Tile Triggers | Could not find a Macro named \"{macro}\" within your world. This active tile will remain unlinked and you will need to link the macro again manually.",
        "active-tiles-entity-reference-missing": "Tile \"{tile}\" | Monk's Active Tile Triggers | Could not find a replacement entity for \"{ref}\" within your world. This active tile will remain unlinked and you will need to link the entity again manually.",
        "active-tiles-unpacked": "Unpacked {tiles} tiles and {actions} actions on scene \"{scene}.\"",
        "cf-clean-up-title": "Clean up {name} entities?",
        "cf-clean-up": "<p>You just imported {count} entites with the name <code style=\"display:inline-block;\">{name}</code> that belong to the <a href=\"https://foundryvtt.com/packages/compendium-folders\" target=\"_blank\">Compendium Folders</a> module which you do not have enabled.</p><p>Do you want to run the <a class=\"entity-link\" draggable=\"true\" data-pack=\"scene-packer.macros\" data-id=\"D0GsPqV3zglJ9w7V\"><i class=\"fas fa-terminal\"></i> Clean up {name} entries</a> macro?</p>"
      },
      "find-journal-compendium": {
        "no-match": "Could not find a Journal entry named \"{journal}\" in the compendiums.",
        "invalid-index": "Error loading journal content from compendium. Check debug logs for details.",
        "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console (F12) for more details.",
        "missing-pack-details": "FindJournalInCompendiums was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup.",
        "no-packs": "Invalid pack configuration. Packing scene journal pins will not work. Check console (F12) for more details.",
        "no-packs-details": "FindJournalInCompendiums was called but there are no \"journalPacks\" defined in the module initialisation script. See the \"Example module javascript\" JournalEntry for details on defining the constant. Possible values are: {packOptions}",
        "no-packs-in-module": "Warning: there are no JournalEntry packs defined in your module.json"
      },
      "find-actor-compendium": {
        "no-match": "Could not find an Actor entry named \"{actor}\" in the compendiums.",
        "invalid-index": "Error loading actor content from compendium. Check debug logs for details.",
        "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console (F12) for more details.",
        "missing-pack-details": "FindActorInCompendiums was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup.",
        "no-packs": "Invalid pack configuration. Packing scene actor tokens will not work. Check console (F12) for more details.",
        "no-packs-details": "FindActorInCompendiums was called but there are no \"creaturePacks\" defined in the module initialisation script. See the \"Example module javascript\" JournalEntry for details on defining the constant. Possible values are: {packOptions}",
        "no-packs-in-module": "Warning: there are no Actor packs defined in your module.json"
      },
      "find-playlist-compendium": {
        "no-match": "Could not find a Playlist entry named \"{playlist}\" in the compendiums.",
        "invalid-index": "Error loading playlist content from compendium. Check debug logs for details.",
        "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console (F12) for more details.",
        "missing-pack-details": "FindPlaylistInCompendiums was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup."
      },
      "find-macro-compendium": {
        "no-match": "Could not find a Macro entry named \"{macro}\" in the compendiums.",
        "invalid-index": "Error loading macro content from compendium. Check debug logs for details.",
        "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console (F12) for more details.",
        "missing-pack-details": "FindMacroInCompendiums was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup."
      },
      "find-entity-compendium": {
        "no-match": "Could not find a {type} entry named \"{name}\" in the compendiums.",
        "invalid-index": "Error loading {type} content from compendium. Check debug logs for details.",
        "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console (F12) for more details.",
        "missing-pack-details": "findCompendiumEntity was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup."
      },
      "find-actor": {
        "missing-name": "Cannot find a token that has no name. Check debug logs for details.",
        "missing-name-details": "Trying to find a token that has no name is not going to end well. Please ensure the Token and Actor have a name prior to packing."
      },
      "link-tokens": {
        "missing": "Could not find {count} actors to link, they will remain unlinked. Check debug logs for details.",
        "missing-details": "Could not find {count} actors to link in {scene}. The following actor tokens were not found in the \"{adventureName}\" folder.",
        "linking": "Relinking {count} Tokens linked to actors."
      },
      "spawn-notes": {
        "missing": "Could not find {count} journals to link. Check debug logs for details.",
        "missing-details": "Could not find {count} notes to link in {scene}. The following journals were not found.",
        "spawning": "Linking {count} journal notes."
      },
      "clear-data": {
        "done": "Finished clearing Packed Data."
      },
      "deprecated": "Warning, {method} is deprecated and will be removed in the future."
    },
    "scene-context": {
      "pack": {
        "title": "Pack Scene Data"
      },
      "unpack": {
        "title": "Unpack Scene Data"
      },
      "clear": {
        "title": "Clear Packed Scene Data"
      }
    },
    "log": {
      "invalidForce": "{moduleName} | Invalid log usage. Expected \"log(force, ...args)\" as boolean but got {force}"
    },
    "errors": {
      "adventureName": {
        "ui": "Invalid call to SetAdventureName(). See console for details.",
        "details": "Invalid adventure name passed to \"SetAdventureName()\". This must be the name of the adventure as defined in module.json under the \"title\" field."
      },
      "moduleName": {
        "ui": "Invalid call to SetModuleName(). See console for details.",
        "details": "Invalid module name passed to \"SetModuleName()\". This must be the name of the module as defined in module.json under the \"name\" field."
      },
      "instance": {
        "ui": "Invalid call to ScenePacker. See console for details.",
        "details": "Invalid module name or method passed to \"ScenePacker\". The module name must be as defined in module.json under the \"name\" field. Ensure that the names are correct and that your module has initialised ScenePacker correctly - see Journal entries in the compendium for assistance."
      },
      "version": {
        "packed-low": "The scene \"{scene}\" (from module \"{sourceModule}\") was packed with Scene Packer version \"{version}\" which is older than the minimum compatible version of \"{supportedVersion}\". Please contact the author and ask them to re-Pack the Scene with a current version."
      },
      "welcomeJournal": {
        "ui": "Invalid call to SetWelcomeJournal(). See console for details.",
        "details": "Invalid journal name passed to \"SetWelcomeJournal()\". This must be the name of a journal in the module compendium.",
        "missing": "SetWelcomeJournal() called with no value. This disables importing a welcome journal. No journal will automatically be opened."
      },
      "additionalJournals": {
        "ui": "Invalid call to SetAdditionalJournalsToImport(). See console for details.",
        "details": "You must pass an array of strings to \"SetAdditionalJournalsToImport()\". They must be the names of journals. Received: {journal}",
        "missing": "SetAdditionalJournalsToImport() called with no value. This disables importing of additional journals. Only those journals linked to the scene by a map pin will be imported."
      },
      "additionalMacros": {
        "ui": "Invalid call to SetAdditionalMacrosToImport(). See console for details.",
        "details": "You must pass an array of strings to \"SetAdditionalMacrosToImport()\". They must be the names of macros. Received: {macro}",
        "missing": "SetAdditionalMacrosToImport() called with no value. This disables importing of additional macros."
      },
      "creaturePacks": {
        "ui": "Invalid call to SetCreaturePacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetCreaturePacks()\". They must be the names of Actor Packs. Received: {pack}",
        "missing": "SetCreatePacks() called with no value. This disables importing of Actors."
      },
      "journalPacks": {
        "ui": "Invalid call to SetJournalPacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetJournalPacks()\". They must be the names of Journal Packs. Received: {pack}",
        "missing": "SetJournalPacks() called with no value. This disables importing of Journals."
      },
      "macroPacks": {
        "ui": "Invalid call to SetMacroPacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetMacroPacks()\". They must be the names of Macro Packs. Received: {pack}",
        "missing": "SetMacroPacks() called with no value. This disables importing of Macros."
      },
      "playlistPacks": {
        "ui": "Invalid call to SetPlaylistPacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetPlaylistPacks()\". They must be the names of Playlist Packs. Received: {pack}",
        "missing": "SetPlaylistPacks() called with no value. This disables importing of Playlists."
      },
      "modulePacks": {
        "ui": "Invalid call to SetAdditionalModulePacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetAdditionalModulePacks()\". They must be the names of Modules. Received: {pack}",
        "missing": "SetAdditionalModulePacks() called with no value."
      }
    },
    "world-conversion": {
      "compendiums": {
        "unlock": "Unlocking compendiums: {list}",
        "lock": "Locking compendiums: {list}",
        "lock-prompt-title": "Lock compendiums?",
        "lock-prompt": "Do you want to lock compendiums that belong to the module \"{moduleName}\"?",
        "lock-prompt-button": "Lock Compendiums",
        "checking-and-updating": "Checking and updating {count} journal references from world links to compendium links.",
        "invalid-ref-type": "Found a journal reference that isn't handled: {type}. Skipping reference...",
        "invalid-no-name": "Found a journal reference but couldn't find its original name. Check debug logs for details.",
        "invalid-no-matching-name": "Could not find {type} reference in world data: {name}",
        "invalid-not-found": "Found a journal reference but couldn't find its compendium version by name. Check debug logs for details.",
        "invalid-not-found-console": "Could not find reference in compendium data. Skipping updating reference...",
        "invalid-too-many": "Found a journal reference but found more than one compendium version by name. Check debug logs for details.",
        "invalid-too-many-console": "Found more than one reference in compendium data. Skipping updating reference...",
        "updating-references": "Changing {count} {type} references in: \"{name}\"",
        "updating-reference-console": "Changing {pack}[{journalEntryId}] {type} reference {oldRef} -> {newRefPack}.{newRef}",
        "updating-reference": "Updating {count} references in \"{name}\". See console for full details.",
        "completed-checks": "Completed {type} \"{name}\" {entryId}.",
        "no-references": "There were no references that needed updating in {type} \"{name}\" {entryId}.",
        "checking-contents": "Checking contents of {type} \"{name}\" {entryId}.",
        "completed": "Completed!",
        "quick-encounters": {
          "could-not-parse": "Could not parse quick encounter data for journal \"{journal}\". Error: {error}",
          "updating-references": "Changing {count} Quick Encounter references in: \"{journal}\"",
          "updating-references-console": "Changing {type} {name} reference {oldRef} -> {newRef}"
        }
      }
    },
    "instance-prompt": {
      "title": "Select instance",
      "intro": "Select the module that you want to Pack against:",
      "none-found": "There are no modules installed that have registered with Scene Packer. See the Journal entries in the compendium for how to register your module with Scene Packer.",
      "select": "Select",
      "cancel": "Cancel"
    },
    "relink-prompt": {
      "title": "Relink Journal Entries",
      "intro": "Select the module you are using Scene Packer with:",
      "make-changes": "Save changes?",
      "make-changes-info": "Leaving this unchecked will operate in a \"dry run\" mode, where changes are only output to the console.",
      "relink": "Relink",
      "cancel": "Cancel",
      "none": "There are no modules initialised with Scene Packer in this world."
    },
    "performance-report": {
      "title": "Performance Report",
      "copy": "Copy to clipboard",
      "close": "Close"
    },
    "deprecated": {
      "method": "The method \"{method}\" has been deprecated and will be removed in a future version. Please see the Journal entries in the Scene Packer compendium on how to correctly call Scene Packer."
    }
  }
}
