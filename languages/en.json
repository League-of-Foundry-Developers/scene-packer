{
  "SCENE-PACKER": {
    "ok": "Ok",
    "dontShow": "Don't show me again",
    "settings": {
      "context-menu": {
        "name": "Enable Scene Packer context menu",
        "hint": "Adds context menu items to assist with packing a Scene. You should only need to enable this while actively developing and packing a module with scenes."
      },
      "compendium": {
        "name": "Show the dialog information when opening a compendium"
      }
    },
    "welcome": {
      "title": "{title} Importer",
      "intro": "<h2>Welcome to <strong>{adventure}</strong>.</h2>",
      "brand-new": "<p>Would you like to import and unpack the Scenes from this module?</p>",
      "update-available": "<p>An update is available. You have <strong>{existing}</strong> installed, and <strong>{version}</strong> is available. Would you like to import and unpack the Scenes from this module?</p><p><strong>Note: If you choose to import all, you will end up with a second copy of the scenes, the bottom one is the newer version.</strong></p>",
      "yes-all": "Yes import all",
      "let-me-choose": "Let me choose",
      "no": "No",
      "dont-ask": "Don't ask me again"
    },
    "notifications": {
      "first-launch": "First launch of this Scene! Unpacking scene...",
      "done": "All done!",
      "pack-scene": {
        "writing-journals": "Writing {number} journals to scene: {name}",
        "no-journal-pins": "No journal pins detected on the scene.",
        "writing-tokens": "Writing {number} tokens to scene: {name}",
        "no-tokens": "No tokens detected on the scene.",
        "already-shown-welcome": "The welcome journal \"{journal}\" has already been shown for this version \"{version}\"."
      },
      "import-entities": {
        "creating-data": "Importing {count} new {type}.",
        "missing-name": "Tried to find an actor for a token with no name.",
        "invalid-packs": {
          "error": "Invalid pack configuration. Cannot import {type}. Check console for more details.",
          "short": "ImportEntities was called with no searchPacks defined.",
          "details": "ImportEntities was called with no valid searchPacks defined. Double check for typos between your manifest.json and module initialisation files. Received the following call details:",
          "reference": "ImportEntities was called with a reference that is not registered with Foundry. Double check for typos between your manifest.json and module initialisation files. Received the following call details:",
          "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console for more details.",
          "missing-pack-details": "ImportEntities was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup."
        }
      },
      "find-journal-compendium": {
        "no-match": "Could not find a Journal entry named \"{journal}\" in the compendiums.",
        "invalid-index": "Error loading journal content from compendium. Check debug logs for details.",
        "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console for more details.",
        "missing-pack-details": "FindJournalInCompendiums was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup."
      },
      "find-actor-compendium": {
        "no-match": "Could not find an Actor entry named \"{actor}\" in the compendiums.",
        "invalid-index": "Error loading actor content from compendium. Check debug logs for details.",
        "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console for more details.",
        "missing-pack-details": "FindActorInCompendiums was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup."
      },
      "find-playlist-compendium": {
        "no-match": "Could not find a Playlist entry named \"{playlist}\" in the compendiums.",
        "invalid-index": "Error loading playlist content from compendium. Check debug logs for details.",
        "missing-pack": "Invalid pack configuration. Cannot find compendium {packName}. Check console for more details.",
        "missing-pack-details": "FindPlaylistInCompendiums was called to search for pack \"{packName}\" which is not found. Check for typos in your module setup."
      },
      "find-actor": {
        "missing-name": "Cannot find a token that has no name. Check debug logs for details.",
        "missing-name-details": "Trying to find a token that has no name is not going to end well. Please ensure the Token and Actor have a name prior to packing."
      },
      "link-tokens": {
        "missing": "Could not find {count} actors to link, they will remain unlinked. Check debug logs for details.",
        "missing-details": "Could not find {count} actors to link. The following actor tokens were not found in the \"{adventureName}\" folder.",
        "linking": "Relinking {count} Tokens linked to actors."
      },
      "spawn-notes": {
        "missing": "Could not find {count} journals to link. Check debug logs for details.",
        "missing-details": "Could not find {count} notes to spawn. The following journals were not found.",
        "spawning": "Spawning {count} journal notes."
      },
      "clear-data": {
        "done": "Finished clearing Packed Data."
      },
      "deprecated": "Warning, {method} is deprecated and will be removed in the future."
    },
    "scene-context": {
      "pack": {
        "title": "Pack Scene Data"
      },
      "unpack": {
        "title": "Unpack Scene Data"
      },
      "clear": {
        "title": "Clear Packed Scene Data"
      }
    },
    "log": {
      "invalidForce": "{moduleName} | Invalid log usage. Expected \"log(force, ...args)\" as boolean but got {force}"
    },
    "errors": {
      "adventureName": {
        "ui": "Invalid call to SetAdventureName(). See console for details.",
        "details": "Invalid adventure name passed to \"SetAdventureName()\". This must be the name of the adventure as defined in module.json under the \"title\" field."
      },
      "moduleName": {
        "ui": "Invalid call to SetModuleName(). See console for details.",
        "details": "Invalid module name passed to \"SetModuleName()\". This must be the name of the module as defined in module.json under the \"name\" field."
      },
      "instance": {
        "ui": "Invalid call to ScenePacker. See console for details.",
        "details": "Invalid module name or method passed to \"ScenePacker\". The module name must be as defined in module.json under the \"name\" field. Ensure that the names are correct and that your module has initialised ScenePacker correctly - see Journal entries in the compendium for assistance."
      },
      "version": {
        "packed-low": "The scene \"{scene}\" (from module \"{sourceModule}\") was packed with Scene Packer version \"{version}\" which is older than the minimum compatible version of \"{supportedVersion}\". Please contact the author and ask them to re-Pack the Scene with a current version."
      },
      "welcomeJournal": {
        "ui": "Invalid call to SetWelcomeJournal(). See console for details.",
        "details": "Invalid journal name passed to \"SetWelcomeJournal()\". This must be the name of a journal in the module compendium.",
        "missing": "SetWelcomeJournal() called with no value. This disables importing a welcome journal. No journal will automatically be opened."
      },
      "additionalJournals": {
        "ui": "Invalid call to SetAdditionalJournalsToImport(). See console for details.",
        "details": "You must pass an array of strings to \"SetAdditionalJournalsToImport()\". They must be the names of journals. Received: {journal}",
        "missing": "SetAdditionalJournalsToImport() called with no value. This disables importing of additional journals. Only those journals linked to the scene by a map pin will be imported."
      },
      "additionalMacros": {
        "ui": "Invalid call to SetAdditionalMacrosToImport(). See console for details.",
        "details": "You must pass an array of strings to \"SetAdditionalMacrosToImport()\". They must be the names of macros. Received: {macro}",
        "missing": "SetAdditionalMacrosToImport() called with no value. This disables importing of additional macros."
      },
      "creaturePacks": {
        "ui": "Invalid call to SetCreaturePacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetCreaturePacks()\". They must be the names of Actor Packs. Received: {pack}",
        "missing": "SetCreatePacks() called with no value. This disables importing of Actors."
      },
      "journalPacks": {
        "ui": "Invalid call to SetJournalPacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetJournalPacks()\". They must be the names of Journal Packs. Received: {pack}",
        "missing": "SetJournalPacks() called with no value. This disables importing of Journals."
      },
      "macroPacks": {
        "ui": "Invalid call to SetMacroPacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetMacroPacks()\". They must be the names of Macro Packs. Received: {pack}",
        "missing": "SetMacroPacks() called with no value. This disables importing of Macros."
      },
      "playlistPacks": {
        "ui": "Invalid call to SetPlaylistPacks(). See console for details.",
        "details": "You must pass an array of strings to \"SetPlaylistPacks()\". They must be the names of Playlist Packs. Received: {pack}",
        "missing": "SetPlaylistPacks() called with no value. This disables importing of Playlists."
      }
    },
    "world-conversion": {
      "compendiums": {
        "unlock": "Unlocking compendiums: {list}",
        "lock": "Locking compendiums: {list}",
        "checking-and-updating": "Checking and updating {count} journal references from world links to compendium links.",
        "invalid-ref-type": "Found a journal reference that isn't handled: {type}. Skipping reference...",
        "invalid-no-name": "Found a journal reference but couldn't find its original name. Check debug logs for details.",
        "invalid-no-matching-name": "Could not find reference name in world data",
        "invalid-not-found": "Found a journal reference but couldn't find its compendium version by name. Check debug logs for details.",
        "invalid-not-found-console": "Could not find reference in compendium data. Skipping updating reference...",
        "invalid-too-many": "Found a journal reference but found more than one compendium version by name. Check debug logs for details.",
        "invalid-too-many-console": "Found more than one reference in compendium data. Skipping updating reference...",
        "updating-journal-references": "Changing {count} journal references in: \"{journal}\"",
        "updating-reference-console": "Changing {pack}[{journalEntryId}] {type} reference {oldRef} -> {newRefPack}.{newRef}",
        "updating-reference": "Updating {count} references in \"{journal}\". See console for full details.",
        "completed-journal": "Completed journal \"{journal}\" {entryId}.",
        "no-references": "There were no references that needed updating in journal  \"{journal}\" {entryId}.",
        "checking-journal": "Checking contents of journal \"{journal}\" {entryId}.",
        "completed": "Completed!",
        "quick-encounters": {
          "could-not-parse": "Could not parse quick encounter data for journal \"{journal}\". Error: {error}",
          "updating-references": "Changing {count} Quick Encounter references in: \"{journal}\"",
          "updating-references-console": "Changing {type} {name} reference {oldRef} -> {newRef}"
        }
      }
    },
    "instance-prompt": {
      "title": "Select instance",
      "intro": "Select the module that you want to Pack against:",
      "none-found": "There are no modules installed that have registered with Scene Packer. See the Journal entries in the compendium for how to register your module with Scene Packer.",
      "select": "Select",
      "cancel": "Cancel"
    },
    "relink-prompt": {
      "title": "Relink Journal Entries",
      "intro": "Select the module you are using Scene Packer with:",
      "make-changes": "Save changes?",
      "make-changes-info": "Leaving this unchecked will operate in a \"dry run\" mode, where changes are only output to the console.",
      "relink": "Relink",
      "cancel": "Cancel",
      "none": "There are no modules initialised with Scene Packer in this world."
    },
    "performance-report": {
      "title": "Performance Report",
      "copy": "Copy to clipboard",
      "close": "Close"
    },
    "deprecated": {
      "method": "The method \"{method}\" has been deprecated and will be removed in a future version. Please see the Journal entries in the Scene Packer compendium on how to correctly call Scene Packer."
    }
  }
}
